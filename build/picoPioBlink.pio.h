// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ------------ //
// picoPioBlink //
// ------------ //

#define picoPioBlink_wrap_target 2
#define picoPioBlink_wrap 7

static const uint16_t picoPioBlink_program_instructions[] = {
    0x80a0, //  0: pull   block                      
    0x6040, //  1: out    y, 32                      
            //     .wrap_target
    0xa022, //  2: mov    x, y                       
    0xe001, //  3: set    pins, 1                    
    0x0044, //  4: jmp    x--, 4                     
    0xa022, //  5: mov    x, y                       
    0xe000, //  6: set    pins, 0                    
    0x0047, //  7: jmp    x--, 7                     
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program picoPioBlink_program = {
    .instructions = picoPioBlink_program_instructions,
    .length = 8,
    .origin = -1,
};

static inline pio_sm_config picoPioBlink_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + picoPioBlink_wrap_target, offset + picoPioBlink_wrap);
    return c;
}

void picoPioBlink_program_init(PIO pio, uint sm, uint offset, uint pin) {
    // 与えられたPIOからの出力を使用するためGPIOをセットアップします
    pio_gpio_init(pio, pin);
    // SMを使用してPIOの連続する複数のピンに同じピン方向を設定します
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, true);
    // offsetからデフォルト設定を得ます
    pio_sm_config c = picoPioBlink_program_get_default_config(offset);
    // SM構成で'set'ピンを設定する。
    sm_config_set_set_pins(&c, pin, 1);
    // SMをリセットし、コンフィグレーションを行う。
    pio_sm_init(pio, sm, offset, &c);
}

#endif

